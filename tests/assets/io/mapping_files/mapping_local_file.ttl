@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ex: <http://example.com/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix csvw: <http://www.w3.org/ns/csvw#> .

@base <http://example.com/base/> .

<TriplesMapCSV>
    a rr:TriplesMap ;
        
    rml:logicalSource [ 
        rml:source "tests/assets/csv/student.csv" ;
        rml:referenceFormulation ql:CSV ;
    ];
	
    rr:subjectMap [ 
        rr:template "http://example.com/{id}" ;
    ]; 
	
    rr:predicateObjectMap [ 
        rr:predicate foaf:name ; 
        rr:objectMap [ 
            rml:reference "name" ; 
        ]
    ].

<#CSVW_source> a csvw:Table;
    csvw:url "tests/assets/csv/student.tsv" ;
    csvw:dialect [
        a csvw:Dialect;
        csvw:delimiter "\t";
    ].

<TriplesMapTSV>
    a rr:TriplesMap ;
        
    rml:logicalSource [ 
        rml:source <#CSVW_source> ;
        rml:referenceFormulation ql:CSV ;
    ];
	
    rr:subjectMap [ 
        rr:template "http://example.com/{id}" ;
    ]; 
	
    rr:predicateObjectMap [ 
        rr:predicate foaf:name ; 
        rr:objectMap [ 
            rml:reference "name" ; 
        ]
    ].

<TriplesMapJSON>
    a rr:TriplesMap;

    rml:logicalSource [ 
        rml:source "tests/assets/json/student.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$.students.[*]" ;
    ];

    rr:subjectMap [ 
        rr:template "http://example.com/{id}" ;
    ]; 
	
    rr:predicateObjectMap [ 
        rr:predicate foaf:name ; 
        rr:objectMap [ 
            rml:reference "name" ; 
        ]
    ].

<TriplesMapXML>
    a rr:TriplesMap;

    rml:logicalSource [ 
        rml:source "tests/assets/xml/student.xml" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/students/student" ;
    ];

    rr:subjectMap [ 
        rr:template "http://example.com/{./id}" ;
    ]; 
	
    rr:predicateObjectMap [ 
        rr:predicate foaf:name ; 
        rr:objectMap [ 
            rml:reference "./name" ; 
        ]
    ].
